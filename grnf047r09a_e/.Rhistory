#-------------every time you open a new R session you'll want to load in the necessary libraries.-----
library(sf)
library(foreign)
library(tidyverse)
library(lwgeom)
options(stringsAsFactors = FALSE)
#-------------------getting set up. Fill in the blanks here before running the code below----------------
#download + unzip SHP file of whatever province you're interested in. I chose Saskatchewan
#https://open.canada.ca/data/en/dataset/82efb454-3241-4440-a5d4-8b03a42f4df8
#set the directory to work out of. You'll want this to be the folder you unzipped the files to. Make sure to use / instead of \ in the path.
setwd("C:/Users/Zangetsu/Documents/Coding Projects/RoadColors/grnf047r09a_e")
#change this to the name of the files you downloaded (sans suffix)
filename <- "grnf047r09a_e"
#pick a lat/long to be at the center of your map. I chose a point in Saskatoon
lat <- 52.139224
long <- -106.646308
#pick a radius to plot the roads in (in meters)
rad <- 10000
#pick the road types you'd like to have colored in the plot
plottypes <-  c('HWY', 'RD', 'AVE', 'ST', 'DR', 'CRES', 'TRAIL', 'LINE')
#set colors for each road type
plotcolors <-  c('HWY' = '#FE4D64', 'RD' = '#4cb580', 'AVE' ='#59c8e5', 'ST' = '#fed032', 'DR' = '#a7abfe',
'CRES' = '#fe9ea5', 'TRAIL' = '#2e968c', 'LINE' = '#ff9223', 'Other' = '#cccccc')
#---------------code---------------
#import  road geography
allroads <- read_sf(".", filename)
allroads$len <- st_length(allroads)
#subset the roads into a circle. You can remove this if you want to plot the entire province.
pt <- data.frame(lat = lat, long = long)
pt <- pt %>% st_as_sf(coords = c("long", "lat"), crs = 4326) %>%  st_transform(32195)
circle <- st_buffer(pt, dist = rad)
circle <- circle %>% st_transform(st_crs(allroads))
allroads <- st_intersection(circle, allroads)
#put other roads into their own dataframe
allroads$TYPE[!(allroads$TYPE %in% plottypes)] <- "Other"
otherroads <- x
allroads <- allroads[(allroads$TYPE  != "Other"),]
#plot it
blankbg <-theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
#depending on the city/radius you're mapping you might need to adjust the size variables below.
#I just do trial/error till I like the way it looks when it's saved
ggplot() + blankbg + theme(panel.grid.major = element_line(colour = "transparent")) +
geom_sf(data=otherroads, size = 1.5, aes(color=TYPE)) +
geom_sf(data=allroads, size = 1.5, aes(color=TYPE)) +
scale_color_manual(values = plotcolors, guide = FALSE)
ggsave("myplot.png", plot = last_plot(),
scale = 1, width = 24, height = 36, units = "in",
dpi = 500)
#--------------before doing this the first time, you need to download these packages. You only need to do this once.
#install.packages(c('sf', 'foreign', 'tidyverse', 'lwgeom'))
#-------------every time you open a new R session you'll want to load in the necessary libraries.-----
library(sf)
library(foreign)
library(tidyverse)
library(lwgeom)
options(stringsAsFactors = FALSE)
#-------------------getting set up. Fill in the blanks here before running the code below----------------
#download + unzip SHP file of whatever province you're interested in. I chose Saskatchewan
#https://open.canada.ca/data/en/dataset/82efb454-3241-4440-a5d4-8b03a42f4df8
#set the directory to work out of. You'll want this to be the folder you unzipped the files to. Make sure to use / instead of \ in the path.
setwd("C:/Users/Zangetsu/Documents/Coding Projects/RoadColors/grnf047r09a_e")
#change this to the name of the files you downloaded (sans suffix)
filename <- "grnf047r09a_e"
#pick a lat/long to be at the center of your map. I chose a point in Saskatoon
lat <- 52.139224
long <- -106.646308
#pick a radius to plot the roads in (in meters)
rad <- 10000
#pick the road types you'd like to have colored in the plot
plottypes <-  c('HWY', 'RD', 'AVE', 'ST', 'DR', 'CRES', 'TRAIL', 'LINE')
#set colors for each road type
plotcolors <-  c('HWY' = '#FE4D64', 'RD' = '#4cb580', 'AVE' ='#59c8e5', 'ST' = '#fed032', 'DR' = '#a7abfe',
'CRES' = '#fe9ea5', 'TRAIL' = '#2e968c', 'LINE' = '#ff9223', 'Other' = '#cccccc')
#---------------code---------------
#import  road geography
allroads <- read_sf(".", filename)
allroads$len <- st_length(allroads)
#subset the roads into a circle. You can remove this if you want to plot the entire province.
pt <- data.frame(lat = lat, long = long)
pt <- pt %>% st_as_sf(coords = c("long", "lat"), crs = 4326) %>%  st_transform(32195)
circle <- st_buffer(pt, dist = rad)
circle <- circle %>% st_transform(st_crs(allroads))
allroads <- st_intersection(circle, allroads)
#put other roads into their own dataframe
allroads$TYPE[!(allroads$TYPE %in% plottypes)] <- "Other"
otherroads <- allroads[(allroads$TYPE  == "Other"),]
allroads <- allroads[(allroads$TYPE  != "Other"),]
#plot it
blankbg <-theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
#depending on the city/radius you're mapping you might need to adjust the size variables below.
#I just do trial/error till I like the way it looks when it's saved
ggplot() + blankbg + theme(panel.grid.major = element_line(colour = "transparent"))  +
geom_sf(data=allroads, size = 1.5, aes(color=TYPE)) +
scale_color_manual(values = plotcolors, guide = FALSE)
ggsave("myplot.png", plot = last_plot(),
scale = 1, width = 24, height = 36, units = "in",
dpi = 500)
#--------------before doing this the first time, you need to download these packages. You only need to do this once.
#install.packages(c('sf', 'foreign', 'tidyverse', 'lwgeom'))
#-------------every time you open a new R session you'll want to load in the necessary libraries.-----
library(sf)
library(foreign)
library(tidyverse)
library(lwgeom)
options(stringsAsFactors = FALSE)
#-------------------getting set up. Fill in the blanks here before running the code below----------------
#download + unzip SHP file of whatever province you're interested in. I chose Saskatchewan
#https://open.canada.ca/data/en/dataset/82efb454-3241-4440-a5d4-8b03a42f4df8
#set the directory to work out of. You'll want this to be the folder you unzipped the files to. Make sure to use / instead of \ in the path.
setwd("C:/Users/Zangetsu/Documents/Coding Projects/RoadColors/grnf047r09a_e")
#change this to the name of the files you downloaded (sans suffix)
filename <- "grnf047r09a_e"
#pick a lat/long to be at the center of your map. I chose a point in Saskatoon
lat <- 52.139224
long <- -106.646308
#pick a radius to plot the roads in (in meters)
rad <- 10000
#pick the road types you'd like to have colored in the plot
plottypes <-  c('HWY', 'RD', 'AVE', 'ST', 'DR', 'CRES', 'TRAIL', 'LINE')
#set colors for each road type
plotcolors <-  c('HWY' = '#FE4D64', 'RD' = '#4cb580', 'AVE' ='#59c8e5', 'ST' = '#fed032', 'DR' = '#a7abfe',
'CRES' = '#fe9ea5', 'TRAIL' = '#2e968c', 'LINE' = '#ff9223', 'Other' = '#cccccc')
#---------------code---------------
#import  road geography
allroads <- read_sf(".", filename)
allroads$len <- st_length(allroads)
#subset the roads into a circle. You can remove this if you want to plot the entire province.
pt <- data.frame(lat = lat, long = long)
pt <- pt %>% st_as_sf(coords = c("long", "lat"), crs = 4326) %>%  st_transform(32195)
circle <- st_buffer(pt, dist = rad)
circle <- circle %>% st_transform(st_crs(allroads))
allroads <- st_intersection(circle, allroads)
#put other roads into their own dataframe
allroads$TYPE[!(allroads$TYPE %in% plottypes)] <- "Other"
otherroads <- allroads[(allroads$TYPE  == "Other"),]
allroads <- allroads[(allroads$TYPE  != "Other"),]
#plot it
blankbg <-theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
#depending on the city/radius you're mapping you might need to adjust the size variables below.
#I just do trial/error till I like the way it looks when it's saved
ggplot() + blankbg + theme(panel.grid.major = element_line(colour = "transparent")) +
scale_color_manual(values = plotcolors, guide = FALSE)
ggsave("myplot.png", plot = last_plot(),
scale = 1, width = 24, height = 36, units = "in",
dpi = 500)
source('~/Documents/Coding Projects/RoadColors/Canada.R', echo=TRUE)
source('~/Documents/Coding Projects/RoadColors/Canada.R', echo=TRUE)
source('~/Documents/Coding Projects/RoadColors/Canada.R', echo=TRUE)
source('~/Documents/Coding Projects/RoadColors/Canada.R', echo=TRUE)
source('~/Documents/Coding Projects/RoadColors/Canada.R', echo=TRUE)
source('~/Documents/Coding Projects/RoadColors/Canada.R', echo=TRUE)
source('~/Documents/Coding Projects/RoadColors/Canada.R', echo=TRUE)
source('~/Documents/Coding Projects/RoadColors/Canada.R', echo=TRUE)
source('~/Documents/Coding Projects/RoadColors/Canada.R', echo=TRUE)
source('~/Documents/Coding Projects/RoadColors/UnitedStates.R', echo=TRUE)
install.packages(c("sf", "foreign", "tidyverse", "stringi", "lwgeom"))
source('~/Documents/Coding Projects/RoadColors/UnitedStates.R', echo=TRUE)
source('~/Documents/Coding Projects/RoadColors/UnitedStates.R', echo=TRUE)
source('~/Documents/Coding Projects/RoadColors/UnitedStates.R', echo=TRUE)
source('~/Documents/Coding Projects/RoadColors/UnitedStates.R', echo=TRUE)
source('~/Documents/Coding Projects/RoadColors/UnitedStates.R', echo=TRUE)
source('~/Documents/Coding Projects/RoadColors/UnitedStates.R', echo=TRUE)
source('~/Documents/Coding Projects/RoadColors/UnitedStates.R', echo=TRUE)
library(sf)
library(foreign)
library(tidyverse)
library(lwgeom)
options(stringsAsFactors = FALSE)
pt <- data.frame(lat = 42.276808, long = -83.738196)
city <- 'Ann Arbor'
geoid <-  c('05000US26161')
#-------import road files.----------
files <- list.files(path="/Users/Zangetsu/Documents/Coding Projects/RoadColors/tl_2018_26161_featnames", pattern="*.dbf", full.names=TRUE, recursive=FALSE) %>% as.data.frame
names(files) <- c("/Users/Zangetsu/Documents/Coding Projects/RoadColors/tl_2018_26161_roads")
files$GEOID <- substr(files$path, 21, 25)
files <- subset(files, GEOID %in% geoid)
library(sf)
library(foreign)
library(tidyverse)
library(lwgeom)
options(stringsAsFactors = FALSE)
pt <- data.frame(lat = 42.276808, long = -83.738196)
city <- 'Ann Arbor'
geoid <-  c('05000US26161')
#-------import road files.----------
files <- list.files(path="/Users/Zangetsu/Documents/Coding Projects/RoadColors/tl_2018_26161_featnames", pattern="*.dbf", full.names=TRUE, recursive=FALSE) %>% as.data.frame
names(files) <- c("/Users/Zangetsu/Documents/Coding Projects/RoadColors/tl_2018_26161_featnames")
files$GEOID <- substr(files$path, 21, 25)
files <- subset(files, GEOID %in% geoid)
allroads <-NULL
library(sf)
library(foreign)
library(tidyverse)
library(lwgeom)
options(stringsAsFactors = FALSE)
pt <- data.frame(lat = 42.276808, long = -83.738196)
city <- 'Ann Arbor'
geoid <-  c('26161')
#-------import road files.----------
files <- list.files(path="/Users/Zangetsu/Documents/Coding Projects/RoadColors/tl_2018_26161_featnames", pattern="*.dbf", full.names=TRUE, recursive=FALSE) %>% as.data.frame
names(files) <- c("/Users/Zangetsu/Documents/Coding Projects/RoadColors/tl_2018_26161_featnames")
files$GEOID <- substr(files$path, 21, 25)
files <- subset(files, GEOID %in% geoid)
allroads <-NULL
library(sf)
library(foreign)
library(tidyverse)
library(lwgeom)
options(stringsAsFactors = FALSE)
pt <- data.frame(lat = 42.276808, long = -83.738196)
city <- 'Ann Arbor'
geoid <-  c('05000US26161')
#-------import road files.----------
files <- list.files(path="/Users/Zangetsu/Documents/Coding Projects/RoadColors/tl_2018_26161_featnames", pattern="*.dbf", full.names=TRUE, recursive=FALSE) %>% as.data.frame
library(sf)
library(foreign)
library(tidyverse)
library(lwgeom)
options(stringsAsFactors = FALSE)
pt <- data.frame(lat = 42.276808, long = -83.738196)
city <- 'Ann Arbor'
geoid <-  c('05000US26161')
#-------import road files.----------
files <- list.files(path="/Users/Zangetsu/Documents/Coding Projects/RoadColors/tl_2018_26161_featnames", pattern="*.dbf", full.names=TRUE, recursive=FALSE) %>% as.data.frame
names(files) <- c("/Users/Zangetsu/Documents/Coding Projects/RoadColors/tl_2018_26161_roads")
library(sf)
library(foreign)
library(tidyverse)
library(lwgeom)
options(stringsAsFactors = FALSE)
pt <- data.frame(lat = 42.276808, long = -83.738196)
city <- 'Ann Arbor'
geoid <-  c('05000US26161')
#-------import road files.----------
files <- list.files(path="/Users/Zangetsu/Documents/Coding Projects/RoadColors/tl_2018_26161_featnames", pattern="*.dbf", full.names=TRUE, recursive=FALSE) %>% as.data.frame
names(files) <- c("/Users/Zangetsu/Documents/Coding Projects/RoadColors/tl_2018_26161_roads")
files$GEOID <- substr(files$path, 21, 25)
for (i in 1:nrow(files)) {
#read in the feature names file, which has road suffixes in it
featname <- read.dbf(files$path[i],  as.is = TRUE)
featname$SUFTYPABRV[is.na(featname$SUFTYPABRV)] <- featname$PRETYPABRV[is.na(featname$SUFTYPABRV)]
featname <- featname %>% dplyr::select(LINEARID, SUFTYPABRV) %>% unique
#read in the roads shapefile as a simple features dataframe
roads <- read_sf("/Users/Zangetsu/Documents/Coding Projects/RoadColors/tl_2018_26161_roads", paste0("tl_2018_", files$GEOID[i], "_roads"))
roads$len <- st_length(roads)
library(sf)
library(foreign)
library(tidyverse)
library(lwgeom)
options(stringsAsFactors = FALSE)
pt <- data.frame(lat = 42.276808, long = -83.738196)
city <- 'Ann Arbor'
geoid <-  c('05000US26161')
#-------import road files.----------
files <- list.files(path="/Users/Zangetsu/Documents/Coding Projects/RoadColors/tl_2018_26161_featnames", pattern="*.dbf", full.names=TRUE, recursive=FALSE) %>% as.data.frame
names(files) <- c("path")
files$GEOID <- substr(files$path, 21, 25)
files <- subset(files, GEOID %in% geoid)
allroads <-NULL
source('~/Documents/Coding Projects/RoadColors/UnitedStates.R', echo=TRUE)
source('~/Documents/Coding Projects/RoadColors/UnitedStates.R', echo=TRUE)
source('~/Documents/Coding Projects/RoadColors/UnitedStates.R', echo=TRUE)
source('~/Documents/Coding Projects/RoadColors/UnitedStates.R', echo=TRUE)
#-----------you need to install the following packages. this only needs to be done once.
#install.packages(c('sf', 'foreign', 'tidyverse', 'stringi', 'lwgeom'))
#-------------every time you open a new R session you'll want to load in the necessary libraries.-----
library(sf)
library(foreign)
library(tidyverse)
library(lwgeom)
options(stringsAsFactors = FALSE)
pt <- data.frame(lat = 42.276808, long = -83.738196)
city <- 'Ann Arbor'
geoid <-  c('05000US26161')
#-------import road files.----------
files <- list.files(path="/Users/Zangetsu/Documents/Coding Projects/RoadColors/tl_2018_26161_featnames", pattern="*.dbf", full.names=TRUE, recursive=FALSE) %>% as.data.frame
names(files) <- c("path")
files$GEOID <- substr(files$path, 21, 25)
files <- subset(files, GEOID %in% geoid)
allroads <-NULL
#----------combine em all and add suffixes--------------
for (i in 1:nrow(files)) {
#read in the feature names file, which has road suffixes in it
featname <- read.dbf(files$path[i],  as.is = TRUE)
featname$SUFTYPABRV[is.na(featname$SUFTYPABRV)] <- featname$PRETYPABRV[is.na(featname$SUFTYPABRV)]
featname <- featname %>% dplyr::select(LINEARID, SUFTYPABRV) %>% unique
#read in the roads shapefile as a simple features dataframe
roads <- read_sf("/Users/Zangetsu/Documents/Coding Projects/RoadColors/tl_2018_26161_roads", paste0("tl_2018_", files$GEOID[i], "_roads"))
roads$len <- st_length(roads)
#join the two
temp <- inner_join(roads, featname, by = "LINEARID")
#merge em all
if (i==1) {
allroads <- temp
}else {
allroads <- do.call(rbind, list(temp, allroads))
}
}
#---------subset the roads into a circle 15 miles wide-------
pt <- pt %>% st_as_sf(coords = c("long", "lat"), crs = 4326) %>% st_transform(2163)
circle <- st_buffer(pt, dist = 24140.2)
circle <- circle %>% st_transform(st_crs(temp))
allroads <- st_intersection(circle, allroads)
#-----------figure out plot colors automagically------
plottype <- allroads %>% select(SUFTYPABRV,len)
plottype$geometry <- NULL
plottype <- subset(plottype, !is.na(SUFTYPABRV))
plottype <- plottype %>% group_by(SUFTYPABRV) %>% summarise(Length = sum(len)) %>% arrange(-Length) %>% head(8)
#these ones I want to set always
plotcolors <- c('Other' = '#cccccc')
#get what's leftover
findcolors <- plottype$SUFTYPABRV
colors <- c('#59c8e5', '#fed032',  '#4cb580', '#fe9ea5', '#fe4d64', '#0a7abf', '#ff9223', '#2e968c')
if(length(findcolors[findcolors=="Ave"])>0) {
plotcolors <- c(plotcolors, "Ave" = '#59c8e5')
findcolors <- findcolors[findcolors !="Ave"]
colors <- colors[colors !="#59c8e5"]
}
if(length(findcolors[findcolors=="St"])>0) {
plotcolors <- c(plotcolors, "St" = '#fed032')
findcolors <- findcolors[findcolors !="St"]
colors <- colors[colors !="#fed032"]
}
if(length(findcolors[findcolors=="Rd"])>0) {
plotcolors <- c(plotcolors, "Rd" = '#4cb580')
findcolors <- findcolors[findcolors !="Rd"]
colors <- colors[colors !="#4cb580"]
}
if(length(findcolors[findcolors=="I-"])>0) {
plotcolors <- c(plotcolors, "I-" = '#fe4d64')
findcolors <- findcolors[findcolors !="I-"]
colors <- colors[colors !="#fe4d64"]
}
if(length(findcolors[findcolors=="Dr"])>0) {
plotcolors <- c(plotcolors, "Dr" = '#0a7abf')
findcolors <- findcolors[findcolors !="Dr"]
colors <- colors[colors !="#0a7abf"]
}
if(length(findcolors[findcolors=="Blvd"])>0) {
plotcolors <- c(plotcolors, "Blvd" = '#2e968c')
findcolors <- findcolors[findcolors !="Blvd"]
colors <- colors[colors !="#2e968c"]
}
if(length(findcolors[findcolors=="US Hwy"])>0) {
plotcolors <- c(plotcolors, "US Hwy" = '#ff9223')
findcolors <- findcolors[findcolors !="US Hwy"]
colors <- colors[colors !="#ff9223"]
}
if(length(findcolors[findcolors=="State Hwy"])>0 &length(colors[colors=="#ff9223"])>0) {
plotcolors <- c(plotcolors, "State Hwy" = '#ff9223')
findcolors <- findcolors[findcolors !="State Hwy"]
colors <- colors[colors !="#ff9223"]
}
if(length(findcolors[findcolors=="Hwy"])> 0 & length(colors[colors=="#ff9223"])>0) {
plotcolors <- c(plotcolors, "Hwy" = '#ff9223')
findcolors <- findcolors[findcolors !="Hwy"]
colors <- colors[colors !="#ff9223"]
}
#go thru and assign the rest in order
for (i in 1:length(colors)) {
tempnames <- names(plotcolors)
plotcolors <- c(plotcolors, colors[i])
names(plotcolors) <- c(tempnames, findcolors[i])
}
#-----------plot----------
suff <- plottype$SUFTYPABRV
allroads$SUFTYPABRV[!(allroads$SUFTYPABRV %in% suff)] <- "Other"
otherroads <- allroads[(allroads$SUFTYPABRV  == "Other"),]
allroads <- allroads[(allroads$SUFTYPABRV  != "Other"),]
blankbg <-theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
ggplot() + blankbg + theme(panel.grid.major = element_line(colour = "transparent")) +
geom_sf(data=otherroads, size = .45, aes(color=SUFTYPABRV)) +
geom_sf(data=allroads, size = .55, aes(color=SUFTYPABRV)) +
scale_color_manual(values = plotcolors)
ggsave(paste0("./IndivRoads/", city, ".png"), plot = last_plot(),
scale = 1, width = 24, height = 24, units = "in",
dpi = 500)
source('~/Documents/Coding Projects/RoadColors/UnitedStates.R', echo=TRUE)
#-----------you need to install the following packages. this only needs to be done once.
#install.packages(c('sf', 'foreign', 'tidyverse', 'stringi', 'lwgeom'))
#-------------every time you open a new R session you'll want to load in the necessary libraries.-----
library(sf)
library(foreign)
library(tidyverse)
library(lwgeom)
options(stringsAsFactors = FALSE)
pt <- data.frame(lat = 42.276808, long = -83.738196)
city <- 'Ann Arbor'
geoid <-  c('05000US26161')
#-------import road files.----------
files <- list.files(path="/Users/Zangetsu/Documents/Coding Projects/RoadColors/tl_2018_26161_featnames", pattern="*.dbf", full.names=TRUE, recursive=FALSE) %>% as.data.frame
names(files) <- c("path")
files$GEOID <- substr(files$path, 21, 25)
files <- subset(files, GEOID %in% geoid)
allroads <-NULL
#----------combine em all and add suffixes--------------
for (i in 1:nrow(files)) {
#read in the feature names file, which has road suffixes in it
featname <- read.dbf(files$path[i],  as.is = TRUE)
featname$SUFTYPABRV[is.na(featname$SUFTYPABRV)] <- featname$PRETYPABRV[is.na(featname$SUFTYPABRV)]
featname <- featname %>% dplyr::select(LINEARID, SUFTYPABRV) %>% unique
#read in the roads shapefile as a simple features dataframe
roads <- read_sf("/Users/Zangetsu/Documents/Coding Projects/RoadColors/tl_2018_26161_roads", paste0("tl_2018_", files$GEOID[i], "_roads"))
roads$len <- st_length(roads)
#join the two
temp <- inner_join(roads, featname, by = "LINEARID")
#merge em all
if (i==1) {
allroads <- temp
}else {
allroads <- do.call(rbind, list(temp, allroads))
}
}
#---------subset the roads into a circle 15 miles wide-------
pt <- pt %>% st_as_sf(coords = c("long", "lat"), crs = 4326) %>% st_transform(2163)
circle <- st_buffer(pt, dist = 24140.2)
circle <- circle %>% st_transform(st_crs(temp))
allroads <- st_intersection(circle, allroads)
#-----------figure out plot colors automagically------
plottype <- allroads %>% select(SUFTYPABRV,len)
plottype$geometry <- NULL
plottype <- subset(plottype, !is.na(SUFTYPABRV))
plottype <- plottype %>% group_by(SUFTYPABRV) %>% summarise(Length = sum(len)) %>% arrange(-Length) %>% head(8)
#these ones I want to set always
plotcolors <- c('Other' = '#cccccc')
#get what's leftover
findcolors <- plottype$SUFTYPABRV
colors <- c('#59c8e5', '#fed032',  '#4cb580', '#fe9ea5', '#fe4d64', '#0a7abf', '#ff9223', '#2e968c')
if(length(findcolors[findcolors=="Ave"])>0) {
plotcolors <- c(plotcolors, "Ave" = '#59c8e5')
findcolors <- findcolors[findcolors !="Ave"]
colors <- colors[colors !="#59c8e5"]
}
if(length(findcolors[findcolors=="St"])>0) {
plotcolors <- c(plotcolors, "St" = '#fed032')
findcolors <- findcolors[findcolors !="St"]
colors <- colors[colors !="#fed032"]
}
if(length(findcolors[findcolors=="Rd"])>0) {
plotcolors <- c(plotcolors, "Rd" = '#4cb580')
findcolors <- findcolors[findcolors !="Rd"]
colors <- colors[colors !="#4cb580"]
}
if(length(findcolors[findcolors=="I-"])>0) {
plotcolors <- c(plotcolors, "I-" = '#fe4d64')
findcolors <- findcolors[findcolors !="I-"]
colors <- colors[colors !="#fe4d64"]
}
if(length(findcolors[findcolors=="Dr"])>0) {
plotcolors <- c(plotcolors, "Dr" = '#0a7abf')
findcolors <- findcolors[findcolors !="Dr"]
colors <- colors[colors !="#0a7abf"]
}
if(length(findcolors[findcolors=="Blvd"])>0) {
plotcolors <- c(plotcolors, "Blvd" = '#2e968c')
findcolors <- findcolors[findcolors !="Blvd"]
colors <- colors[colors !="#2e968c"]
}
if(length(findcolors[findcolors=="US Hwy"])>0) {
plotcolors <- c(plotcolors, "US Hwy" = '#ff9223')
findcolors <- findcolors[findcolors !="US Hwy"]
colors <- colors[colors !="#ff9223"]
}
if(length(findcolors[findcolors=="State Hwy"])>0 &length(colors[colors=="#ff9223"])>0) {
plotcolors <- c(plotcolors, "State Hwy" = '#ff9223')
findcolors <- findcolors[findcolors !="State Hwy"]
colors <- colors[colors !="#ff9223"]
}
if(length(findcolors[findcolors=="Hwy"])> 0 & length(colors[colors=="#ff9223"])>0) {
plotcolors <- c(plotcolors, "Hwy" = '#ff9223')
findcolors <- findcolors[findcolors !="Hwy"]
colors <- colors[colors !="#ff9223"]
}
#go thru and assign the rest in order
for (i in 1:length(colors)) {
tempnames <- names(plotcolors)
plotcolors <- c(plotcolors, colors[i])
names(plotcolors) <- c(tempnames, findcolors[i])
}
#-----------plot----------
suff <- plottype$SUFTYPABRV
allroads$SUFTYPABRV[!(allroads$SUFTYPABRV %in% suff)] <- "Other"
otherroads <- allroads[(allroads$SUFTYPABRV  == "Other"),]
allroads <- allroads[(allroads$SUFTYPABRV  != "Other"),]
blankbg <-theme(axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(), axis.title.y=element_blank(),
panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
ggplot() + blankbg + theme(panel.grid.major = element_line(colour = "transparent")) +
geom_sf(data=otherroads, size = .45, aes(color=SUFTYPABRV)) +
geom_sf(data=allroads, size = .55, aes(color=SUFTYPABRV)) +
scale_color_manual(values = plotcolors)
ggsave(paste0("./IndivRoads/", city, ".png"), plot = last_plot(),
scale = 1, width = 24, height = 24, units = "in",
dpi = 500)
